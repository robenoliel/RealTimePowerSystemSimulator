// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module nodalSolver_vetmat (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        G_vec_I_0_i,
        G_vec_I_0_o,
        G_vec_I_0_o_ap_vld,
        G_vec_I_1_i,
        G_vec_I_1_o,
        G_vec_I_1_o_ap_vld,
        G_vec_I_2_i,
        G_vec_I_2_o,
        G_vec_I_2_o_ap_vld,
        G_vec_V_0,
        G_vec_V_0_ap_vld,
        G_vec_V_1,
        G_vec_V_1_ap_vld,
        G_vec_V_2,
        G_vec_V_2_ap_vld,
        grp_fu_171_p_din0,
        grp_fu_171_p_din1,
        grp_fu_171_p_opcode,
        grp_fu_171_p_dout0,
        grp_fu_171_p_ce,
        grp_fu_176_p_din0,
        grp_fu_176_p_din1,
        grp_fu_176_p_opcode,
        grp_fu_176_p_dout0,
        grp_fu_176_p_ce,
        grp_fu_181_p_din0,
        grp_fu_181_p_din1,
        grp_fu_181_p_opcode,
        grp_fu_181_p_dout0,
        grp_fu_181_p_ce,
        grp_fu_726_p_din0,
        grp_fu_726_p_din1,
        grp_fu_726_p_opcode,
        grp_fu_726_p_dout0,
        grp_fu_726_p_ce,
        grp_fu_730_p_din0,
        grp_fu_730_p_din1,
        grp_fu_730_p_opcode,
        grp_fu_730_p_dout0,
        grp_fu_730_p_ce,
        grp_fu_734_p_din0,
        grp_fu_734_p_din1,
        grp_fu_734_p_opcode,
        grp_fu_734_p_dout0,
        grp_fu_734_p_ce,
        grp_fu_738_p_din0,
        grp_fu_738_p_din1,
        grp_fu_738_p_opcode,
        grp_fu_738_p_dout0,
        grp_fu_738_p_ce,
        grp_fu_186_p_din0,
        grp_fu_186_p_din1,
        grp_fu_186_p_dout0,
        grp_fu_186_p_ce,
        grp_fu_191_p_din0,
        grp_fu_191_p_din1,
        grp_fu_191_p_dout0,
        grp_fu_191_p_ce,
        grp_fu_196_p_din0,
        grp_fu_196_p_din1,
        grp_fu_196_p_dout0,
        grp_fu_196_p_ce,
        grp_fu_742_p_din0,
        grp_fu_742_p_din1,
        grp_fu_742_p_dout0,
        grp_fu_742_p_ce,
        grp_fu_746_p_din0,
        grp_fu_746_p_din1,
        grp_fu_746_p_dout0,
        grp_fu_746_p_ce,
        grp_fu_750_p_din0,
        grp_fu_750_p_din1,
        grp_fu_750_p_dout0,
        grp_fu_750_p_ce,
        grp_fu_754_p_din0,
        grp_fu_754_p_din1,
        grp_fu_754_p_dout0,
        grp_fu_754_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] G_vec_I_0_i;
output  [31:0] G_vec_I_0_o;
output   G_vec_I_0_o_ap_vld;
input  [31:0] G_vec_I_1_i;
output  [31:0] G_vec_I_1_o;
output   G_vec_I_1_o_ap_vld;
input  [31:0] G_vec_I_2_i;
output  [31:0] G_vec_I_2_o;
output   G_vec_I_2_o_ap_vld;
output  [31:0] G_vec_V_0;
output   G_vec_V_0_ap_vld;
output  [31:0] G_vec_V_1;
output   G_vec_V_1_ap_vld;
output  [31:0] G_vec_V_2;
output   G_vec_V_2_ap_vld;
output  [31:0] grp_fu_171_p_din0;
output  [31:0] grp_fu_171_p_din1;
output  [1:0] grp_fu_171_p_opcode;
input  [31:0] grp_fu_171_p_dout0;
output   grp_fu_171_p_ce;
output  [31:0] grp_fu_176_p_din0;
output  [31:0] grp_fu_176_p_din1;
output  [1:0] grp_fu_176_p_opcode;
input  [31:0] grp_fu_176_p_dout0;
output   grp_fu_176_p_ce;
output  [31:0] grp_fu_181_p_din0;
output  [31:0] grp_fu_181_p_din1;
output  [1:0] grp_fu_181_p_opcode;
input  [31:0] grp_fu_181_p_dout0;
output   grp_fu_181_p_ce;
output  [31:0] grp_fu_726_p_din0;
output  [31:0] grp_fu_726_p_din1;
output  [1:0] grp_fu_726_p_opcode;
input  [31:0] grp_fu_726_p_dout0;
output   grp_fu_726_p_ce;
output  [31:0] grp_fu_730_p_din0;
output  [31:0] grp_fu_730_p_din1;
output  [1:0] grp_fu_730_p_opcode;
input  [31:0] grp_fu_730_p_dout0;
output   grp_fu_730_p_ce;
output  [31:0] grp_fu_734_p_din0;
output  [31:0] grp_fu_734_p_din1;
output  [1:0] grp_fu_734_p_opcode;
input  [31:0] grp_fu_734_p_dout0;
output   grp_fu_734_p_ce;
output  [31:0] grp_fu_738_p_din0;
output  [31:0] grp_fu_738_p_din1;
output  [1:0] grp_fu_738_p_opcode;
input  [31:0] grp_fu_738_p_dout0;
output   grp_fu_738_p_ce;
output  [31:0] grp_fu_186_p_din0;
output  [31:0] grp_fu_186_p_din1;
input  [31:0] grp_fu_186_p_dout0;
output   grp_fu_186_p_ce;
output  [31:0] grp_fu_191_p_din0;
output  [31:0] grp_fu_191_p_din1;
input  [31:0] grp_fu_191_p_dout0;
output   grp_fu_191_p_ce;
output  [31:0] grp_fu_196_p_din0;
output  [31:0] grp_fu_196_p_din1;
input  [31:0] grp_fu_196_p_dout0;
output   grp_fu_196_p_ce;
output  [31:0] grp_fu_742_p_din0;
output  [31:0] grp_fu_742_p_din1;
input  [31:0] grp_fu_742_p_dout0;
output   grp_fu_742_p_ce;
output  [31:0] grp_fu_746_p_din0;
output  [31:0] grp_fu_746_p_din1;
input  [31:0] grp_fu_746_p_dout0;
output   grp_fu_746_p_ce;
output  [31:0] grp_fu_750_p_din0;
output  [31:0] grp_fu_750_p_din1;
input  [31:0] grp_fu_750_p_dout0;
output   grp_fu_750_p_ce;
output  [31:0] grp_fu_754_p_din0;
output  [31:0] grp_fu_754_p_din1;
input  [31:0] grp_fu_754_p_dout0;
output   grp_fu_754_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] G_vec_I_0_o;
reg G_vec_I_0_o_ap_vld;
reg[31:0] G_vec_I_1_o;
reg G_vec_I_1_o_ap_vld;
reg[31:0] G_vec_I_2_o;
reg G_vec_I_2_o_ap_vld;
reg G_vec_V_0_ap_vld;
reg G_vec_V_1_ap_vld;
reg G_vec_V_2_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_58_p2;
reg   [31:0] mul_reg_154;
wire   [31:0] grp_fu_63_p2;
reg   [31:0] mul_1_reg_159;
wire   [31:0] grp_fu_28_p2;
reg   [31:0] acc_1_reg_170;
wire   [31:0] grp_fu_68_p2;
reg   [31:0] mul_0_1_reg_175;
wire   [31:0] grp_fu_33_p2;
reg   [31:0] acc_1_1_reg_180;
wire   [31:0] grp_fu_73_p2;
reg   [31:0] mul_1_1_reg_185;
wire   [31:0] grp_fu_38_p2;
reg   [31:0] acc_1_0_1_reg_197;
wire   [31:0] grp_fu_78_p2;
reg   [31:0] mul_0_2_reg_202;
wire   [31:0] grp_fu_42_p2;
reg   [31:0] acc_1_1_1_reg_207;
wire   [31:0] grp_fu_83_p2;
reg   [31:0] mul_1_2_reg_213;
wire   [31:0] grp_fu_88_p2;
reg   [31:0] mul_2_2_reg_218;
wire    ap_block_pp0_stage0_subdone;
wire   [31:0] grp_fu_46_p2;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_50_p2;
wire   [31:0] grp_fu_54_p2;
wire   [31:0] grp_fu_28_p0;
wire   [31:0] grp_fu_28_p1;
wire   [31:0] grp_fu_33_p0;
wire   [31:0] grp_fu_33_p1;
wire   [31:0] grp_fu_38_p0;
wire   [31:0] grp_fu_38_p1;
wire   [31:0] grp_fu_42_p0;
wire   [31:0] grp_fu_42_p1;
wire   [31:0] grp_fu_46_p0;
wire   [31:0] grp_fu_46_p1;
wire   [31:0] grp_fu_50_p0;
wire   [31:0] grp_fu_50_p1;
wire   [31:0] grp_fu_54_p0;
wire   [31:0] grp_fu_54_p1;
wire   [31:0] grp_fu_58_p0;
wire   [31:0] grp_fu_58_p1;
wire   [31:0] grp_fu_63_p0;
wire   [31:0] grp_fu_63_p1;
wire   [31:0] grp_fu_68_p0;
wire   [31:0] grp_fu_68_p1;
wire   [31:0] grp_fu_73_p0;
wire   [31:0] grp_fu_73_p1;
wire   [31:0] grp_fu_78_p0;
wire   [31:0] grp_fu_78_p1;
wire   [31:0] grp_fu_83_p0;
wire   [31:0] grp_fu_83_p1;
wire   [31:0] grp_fu_88_p0;
wire   [31:0] grp_fu_88_p1;
wire    grp_fu_28_ce;
wire    grp_fu_33_ce;
wire    grp_fu_38_ce;
wire    grp_fu_42_ce;
wire    grp_fu_46_ce;
wire    grp_fu_50_ce;
wire    grp_fu_54_ce;
wire    grp_fu_58_ce;
wire    grp_fu_63_ce;
wire    grp_fu_68_ce;
wire    grp_fu_73_ce;
wire    grp_fu_78_ce;
wire    grp_fu_83_ce;
wire    grp_fu_88_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to13;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        acc_1_0_1_reg_197 <= grp_fu_181_p_dout0;
        acc_1_1_1_reg_207 <= grp_fu_726_p_dout0;
        acc_1_1_reg_180 <= grp_fu_176_p_dout0;
        acc_1_reg_170 <= grp_fu_171_p_dout0;
        mul_0_1_reg_175 <= grp_fu_196_p_dout0;
        mul_0_2_reg_202 <= grp_fu_746_p_dout0;
        mul_1_1_reg_185 <= grp_fu_742_p_dout0;
        mul_1_2_reg_213 <= grp_fu_750_p_dout0;
        mul_1_reg_159 <= grp_fu_191_p_dout0;
        mul_2_2_reg_218 <= grp_fu_754_p_dout0;
        mul_reg_154 <= grp_fu_186_p_dout0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        G_vec_I_0_o = 32'd0;
    end else begin
        G_vec_I_0_o = G_vec_I_0_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        G_vec_I_0_o_ap_vld = 1'b1;
    end else begin
        G_vec_I_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        G_vec_I_1_o = 32'd0;
    end else begin
        G_vec_I_1_o = G_vec_I_1_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        G_vec_I_1_o_ap_vld = 1'b1;
    end else begin
        G_vec_I_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        G_vec_I_2_o = 32'd0;
    end else begin
        G_vec_I_2_o = G_vec_I_2_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        G_vec_I_2_o_ap_vld = 1'b1;
    end else begin
        G_vec_I_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        G_vec_V_0_ap_vld = 1'b1;
    end else begin
        G_vec_V_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        G_vec_V_1_ap_vld = 1'b1;
    end else begin
        G_vec_V_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        G_vec_V_2_ap_vld = 1'b1;
    end else begin
        G_vec_V_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to13 = 1'b1;
    end else begin
        ap_idle_pp0_0to13 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to13 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign G_vec_V_0 = grp_fu_730_p_dout0;

assign G_vec_V_1 = grp_fu_734_p_dout0;

assign G_vec_V_2 = grp_fu_738_p_dout0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign grp_fu_171_p_ce = 1'b1;

assign grp_fu_171_p_din0 = mul_reg_154;

assign grp_fu_171_p_din1 = 32'd0;

assign grp_fu_171_p_opcode = 2'd0;

assign grp_fu_176_p_ce = 1'b1;

assign grp_fu_176_p_din0 = mul_1_reg_159;

assign grp_fu_176_p_din1 = 32'd0;

assign grp_fu_176_p_opcode = 2'd0;

assign grp_fu_181_p_ce = 1'b1;

assign grp_fu_181_p_din0 = acc_1_reg_170;

assign grp_fu_181_p_din1 = mul_0_1_reg_175;

assign grp_fu_181_p_opcode = 2'd0;

assign grp_fu_186_p_ce = 1'b1;

assign grp_fu_186_p_din0 = G_vec_I_0_i;

assign grp_fu_186_p_din1 = 32'd1092616192;

assign grp_fu_191_p_ce = 1'b1;

assign grp_fu_191_p_din0 = G_vec_I_0_i;

assign grp_fu_191_p_din1 = 32'd0;

assign grp_fu_196_p_ce = 1'b1;

assign grp_fu_196_p_din0 = G_vec_I_1_i;

assign grp_fu_196_p_din1 = 32'd0;

assign grp_fu_28_ce = 1'b1;

assign grp_fu_28_p0 = mul_reg_154;

assign grp_fu_28_p1 = 32'd0;

assign grp_fu_28_p2 = grp_fu_171_p_dout0;

assign grp_fu_33_ce = 1'b1;

assign grp_fu_33_p0 = mul_1_reg_159;

assign grp_fu_33_p1 = 32'd0;

assign grp_fu_33_p2 = grp_fu_176_p_dout0;

assign grp_fu_38_ce = 1'b1;

assign grp_fu_38_p0 = acc_1_reg_170;

assign grp_fu_38_p1 = mul_0_1_reg_175;

assign grp_fu_38_p2 = grp_fu_181_p_dout0;

assign grp_fu_42_ce = 1'b1;

assign grp_fu_42_p0 = acc_1_1_reg_180;

assign grp_fu_42_p1 = mul_1_1_reg_185;

assign grp_fu_42_p2 = grp_fu_726_p_dout0;

assign grp_fu_46_ce = 1'b1;

assign grp_fu_46_p0 = acc_1_0_1_reg_197;

assign grp_fu_46_p1 = mul_0_2_reg_202;

assign grp_fu_46_p2 = grp_fu_730_p_dout0;

assign grp_fu_50_ce = 1'b1;

assign grp_fu_50_p0 = acc_1_1_1_reg_207;

assign grp_fu_50_p1 = mul_1_2_reg_213;

assign grp_fu_50_p2 = grp_fu_734_p_dout0;

assign grp_fu_54_ce = 1'b1;

assign grp_fu_54_p0 = acc_1_1_1_reg_207;

assign grp_fu_54_p1 = mul_2_2_reg_218;

assign grp_fu_54_p2 = grp_fu_738_p_dout0;

assign grp_fu_58_ce = 1'b1;

assign grp_fu_58_p0 = G_vec_I_0_i;

assign grp_fu_58_p1 = 32'd1092616192;

assign grp_fu_58_p2 = grp_fu_186_p_dout0;

assign grp_fu_63_ce = 1'b1;

assign grp_fu_63_p0 = G_vec_I_0_i;

assign grp_fu_63_p1 = 32'd0;

assign grp_fu_63_p2 = grp_fu_191_p_dout0;

assign grp_fu_68_ce = 1'b1;

assign grp_fu_68_p0 = G_vec_I_1_i;

assign grp_fu_68_p1 = 32'd0;

assign grp_fu_68_p2 = grp_fu_196_p_dout0;

assign grp_fu_726_p_ce = 1'b1;

assign grp_fu_726_p_din0 = acc_1_1_reg_180;

assign grp_fu_726_p_din1 = mul_1_1_reg_185;

assign grp_fu_726_p_opcode = 2'd0;

assign grp_fu_730_p_ce = 1'b1;

assign grp_fu_730_p_din0 = acc_1_0_1_reg_197;

assign grp_fu_730_p_din1 = mul_0_2_reg_202;

assign grp_fu_730_p_opcode = 2'd0;

assign grp_fu_734_p_ce = 1'b1;

assign grp_fu_734_p_din0 = acc_1_1_1_reg_207;

assign grp_fu_734_p_din1 = mul_1_2_reg_213;

assign grp_fu_734_p_opcode = 2'd0;

assign grp_fu_738_p_ce = 1'b1;

assign grp_fu_738_p_din0 = acc_1_1_1_reg_207;

assign grp_fu_738_p_din1 = mul_2_2_reg_218;

assign grp_fu_738_p_opcode = 2'd0;

assign grp_fu_73_ce = 1'b1;

assign grp_fu_73_p0 = G_vec_I_1_i;

assign grp_fu_73_p1 = 32'd1100051549;

assign grp_fu_73_p2 = grp_fu_742_p_dout0;

assign grp_fu_742_p_ce = 1'b1;

assign grp_fu_742_p_din0 = G_vec_I_1_i;

assign grp_fu_742_p_din1 = 32'd1100051549;

assign grp_fu_746_p_ce = 1'b1;

assign grp_fu_746_p_din0 = G_vec_I_2_i;

assign grp_fu_746_p_din1 = 32'd0;

assign grp_fu_750_p_ce = 1'b1;

assign grp_fu_750_p_din0 = G_vec_I_2_i;

assign grp_fu_750_p_din1 = 32'd1100051549;

assign grp_fu_754_p_ce = 1'b1;

assign grp_fu_754_p_din0 = G_vec_I_2_i;

assign grp_fu_754_p_din1 = 32'd1100077763;

assign grp_fu_78_ce = 1'b1;

assign grp_fu_78_p0 = G_vec_I_2_i;

assign grp_fu_78_p1 = 32'd0;

assign grp_fu_78_p2 = grp_fu_746_p_dout0;

assign grp_fu_83_ce = 1'b1;

assign grp_fu_83_p0 = G_vec_I_2_i;

assign grp_fu_83_p1 = 32'd1100051549;

assign grp_fu_83_p2 = grp_fu_750_p_dout0;

assign grp_fu_88_ce = 1'b1;

assign grp_fu_88_p0 = G_vec_I_2_i;

assign grp_fu_88_p1 = 32'd1100077763;

assign grp_fu_88_p2 = grp_fu_754_p_dout0;

endmodule //nodalSolver_vetmat
