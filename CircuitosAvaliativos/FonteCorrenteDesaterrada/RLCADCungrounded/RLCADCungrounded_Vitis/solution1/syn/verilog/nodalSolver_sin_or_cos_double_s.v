// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module nodalSolver_sin_or_cos_double_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        t_in,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [63:0] t_in;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] ref_4oPi_table_256_V_address0;
reg    ref_4oPi_table_256_V_ce0;
wire   [255:0] ref_4oPi_table_256_V_q0;
wire   [7:0] fourth_order_double_sin_cos_K0_V_address0;
reg    fourth_order_double_sin_cos_K0_V_ce0;
wire   [58:0] fourth_order_double_sin_cos_K0_V_q0;
wire   [7:0] fourth_order_double_sin_cos_K1_V_address0;
reg    fourth_order_double_sin_cos_K1_V_ce0;
wire   [51:0] fourth_order_double_sin_cos_K1_V_q0;
wire   [7:0] fourth_order_double_sin_cos_K2_V_address0;
reg    fourth_order_double_sin_cos_K2_V_ce0;
wire  signed [43:0] fourth_order_double_sin_cos_K2_V_q0;
wire   [7:0] fourth_order_double_sin_cos_K3_V_address0;
reg    fourth_order_double_sin_cos_K3_V_ce0;
wire   [32:0] fourth_order_double_sin_cos_K3_V_q0;
wire   [7:0] fourth_order_double_sin_cos_K4_V_address0;
reg    fourth_order_double_sin_cos_K4_V_ce0;
wire   [24:0] fourth_order_double_sin_cos_K4_V_q0;
reg   [0:0] p_Result_21_reg_1457;
reg   [0:0] p_Result_21_reg_1457_pp0_iter1_reg;
reg   [0:0] p_Result_21_reg_1457_pp0_iter2_reg;
reg   [0:0] p_Result_21_reg_1457_pp0_iter3_reg;
wire   [10:0] tmp_14_fu_306_p4;
reg   [10:0] tmp_14_reg_1463;
reg   [10:0] tmp_14_reg_1463_pp0_iter1_reg;
reg   [10:0] tmp_14_reg_1463_pp0_iter2_reg;
reg   [10:0] tmp_14_reg_1463_pp0_iter3_reg;
wire   [51:0] tmp_15_fu_316_p1;
reg   [51:0] tmp_15_reg_1470;
reg   [51:0] tmp_15_reg_1470_pp0_iter1_reg;
wire   [0:0] closepath_fu_320_p2;
reg   [0:0] closepath_reg_1476;
reg   [0:0] closepath_reg_1476_pp0_iter1_reg;
reg   [0:0] closepath_reg_1476_pp0_iter2_reg;
reg   [0:0] closepath_reg_1476_pp0_iter3_reg;
wire   [6:0] trunc_ln628_fu_355_p1;
reg   [6:0] trunc_ln628_reg_1488;
reg  signed [169:0] Med_V_reg_1493;
wire   [0:0] icmp_ln824_1_fu_394_p2;
reg   [0:0] icmp_ln824_1_reg_1503;
reg   [0:0] icmp_ln824_1_reg_1503_pp0_iter3_reg;
reg   [0:0] icmp_ln824_1_reg_1503_pp0_iter4_reg;
reg   [0:0] icmp_ln824_1_reg_1503_pp0_iter5_reg;
reg   [0:0] icmp_ln824_1_reg_1503_pp0_iter6_reg;
reg   [0:0] icmp_ln824_1_reg_1503_pp0_iter7_reg;
reg   [0:0] icmp_ln824_1_reg_1503_pp0_iter8_reg;
reg   [0:0] icmp_ln824_1_reg_1503_pp0_iter9_reg;
reg   [0:0] icmp_ln824_1_reg_1503_pp0_iter10_reg;
reg   [0:0] icmp_ln824_1_reg_1503_pp0_iter11_reg;
wire   [169:0] grp_fu_389_p2;
reg   [169:0] ret_reg_1509;
reg   [123:0] Mx_bits_V_reg_1514;
reg   [2:0] k_V_reg_1521;
reg   [62:0] Mx_V_reg_1526;
reg   [62:0] Mx_V_reg_1526_pp0_iter5_reg;
reg   [62:0] Mx_V_reg_1526_pp0_iter6_reg;
reg   [62:0] Mx_V_reg_1526_pp0_iter7_reg;
reg   [62:0] Mx_V_reg_1526_pp0_iter8_reg;
wire  signed [10:0] Ex_V_3_fu_534_p2;
reg  signed [10:0] Ex_V_3_reg_1533;
reg  signed [10:0] Ex_V_3_reg_1533_pp0_iter5_reg;
reg  signed [10:0] Ex_V_3_reg_1533_pp0_iter6_reg;
reg  signed [10:0] Ex_V_3_reg_1533_pp0_iter7_reg;
reg  signed [10:0] Ex_V_3_reg_1533_pp0_iter8_reg;
reg  signed [10:0] Ex_V_3_reg_1533_pp0_iter9_reg;
reg  signed [10:0] Ex_V_3_reg_1533_pp0_iter10_reg;
reg   [0:0] isNeg_reg_1539;
wire   [0:0] cos_basis_fu_548_p10;
reg   [0:0] cos_basis_reg_1545;
reg   [0:0] cos_basis_reg_1545_pp0_iter5_reg;
reg   [0:0] cos_basis_reg_1545_pp0_iter6_reg;
reg   [0:0] cos_basis_reg_1545_pp0_iter7_reg;
reg   [0:0] cos_basis_reg_1545_pp0_iter8_reg;
reg   [0:0] cos_basis_reg_1545_pp0_iter9_reg;
reg   [0:0] cos_basis_reg_1545_pp0_iter10_reg;
wire   [0:0] icmp_ln824_fu_661_p2;
reg   [0:0] icmp_ln824_reg_1552;
reg   [0:0] icmp_ln824_reg_1552_pp0_iter5_reg;
reg   [0:0] icmp_ln824_reg_1552_pp0_iter6_reg;
reg   [0:0] icmp_ln824_reg_1552_pp0_iter7_reg;
reg   [0:0] icmp_ln824_reg_1552_pp0_iter8_reg;
reg   [0:0] icmp_ln824_reg_1552_pp0_iter9_reg;
reg   [0:0] icmp_ln824_reg_1552_pp0_iter10_reg;
reg   [0:0] icmp_ln824_reg_1552_pp0_iter11_reg;
wire   [0:0] and_ln300_fu_666_p2;
reg   [0:0] and_ln300_reg_1557;
reg   [0:0] and_ln300_reg_1557_pp0_iter5_reg;
reg   [0:0] and_ln300_reg_1557_pp0_iter6_reg;
reg   [0:0] and_ln300_reg_1557_pp0_iter7_reg;
reg   [0:0] and_ln300_reg_1557_pp0_iter8_reg;
reg   [0:0] and_ln300_reg_1557_pp0_iter9_reg;
reg   [0:0] and_ln300_reg_1557_pp0_iter10_reg;
reg   [0:0] and_ln300_reg_1557_pp0_iter11_reg;
wire   [0:0] icmp_ln824_2_fu_671_p2;
reg   [0:0] icmp_ln824_2_reg_1563;
reg   [0:0] icmp_ln824_2_reg_1563_pp0_iter5_reg;
reg   [0:0] icmp_ln824_2_reg_1563_pp0_iter6_reg;
reg   [0:0] icmp_ln824_2_reg_1563_pp0_iter7_reg;
reg   [0:0] icmp_ln824_2_reg_1563_pp0_iter8_reg;
reg   [0:0] icmp_ln824_2_reg_1563_pp0_iter9_reg;
reg   [0:0] icmp_ln824_2_reg_1563_pp0_iter10_reg;
reg   [0:0] icmp_ln824_2_reg_1563_pp0_iter11_reg;
wire   [0:0] results_sign_V_fu_688_p3;
reg   [0:0] results_sign_V_reg_1570;
reg   [0:0] results_sign_V_reg_1570_pp0_iter5_reg;
reg   [0:0] results_sign_V_reg_1570_pp0_iter6_reg;
reg   [0:0] results_sign_V_reg_1570_pp0_iter7_reg;
reg   [0:0] results_sign_V_reg_1570_pp0_iter8_reg;
reg   [0:0] results_sign_V_reg_1570_pp0_iter9_reg;
reg   [0:0] results_sign_V_reg_1570_pp0_iter10_reg;
reg   [0:0] results_sign_V_reg_1570_pp0_iter11_reg;
wire   [55:0] B_fu_746_p1;
reg   [55:0] B_reg_1575;
reg   [55:0] B_reg_1575_pp0_iter6_reg;
reg   [48:0] B_trunc_reg_1580;
wire   [63:0] zext_ln488_fu_773_p1;
reg   [63:0] zext_ln488_reg_1585;
reg   [63:0] zext_ln488_reg_1585_pp0_iter6_reg;
wire   [97:0] zext_ln1070_fu_778_p1;
reg   [97:0] zext_ln1070_reg_1598;
reg   [48:0] B_squared_reg_1603;
reg  signed [51:0] fourth_order_double_sin_cos_K1_V_load_reg_1609;
reg   [55:0] rhs_1_reg_1624;
reg   [47:0] rhs_2_reg_1629;
reg   [41:0] trunc_ln1_reg_1634;
reg   [34:0] trunc_ln1069_1_reg_1644;
reg   [28:0] rhs_4_reg_1654;
wire   [63:0] ret_V_5_fu_936_p2;
reg   [63:0] ret_V_5_reg_1659;
reg   [36:0] trunc_ln2_reg_1664;
wire   [62:0] Mx_V_2_fu_952_p3;
reg   [62:0] Mx_V_2_reg_1669;
wire   [63:0] ret_V_fu_969_p2;
reg  signed [63:0] ret_V_reg_1674;
reg   [62:0] result_V_reg_1679;
reg   [15:0] p_Result_15_i_reg_1685;
reg   [15:0] p_Result_15_1_i_reg_1690;
reg   [15:0] p_Result_15_2_i_reg_1695;
reg   [14:0] p_Result_i_reg_1700;
reg   [31:0] tmp_2_i_fu_1121_p3;
reg   [31:0] tmp_2_i_reg_1705;
reg   [31:0] tmp_3_i_fu_1139_p3;
reg   [31:0] tmp_3_i_reg_1710;
wire   [62:0] shl_ln1253_fu_1151_p2;
reg   [62:0] shl_ln1253_reg_1715;
wire   [0:0] icmp_ln453_fu_1156_p2;
reg   [0:0] icmp_ln453_reg_1720;
wire   [62:0] shl_ln1253_1_fu_1172_p2;
reg   [62:0] shl_ln1253_1_reg_1725;
wire   [0:0] and_ln453_fu_1208_p2;
reg   [0:0] and_ln453_reg_1731;
wire   [0:0] and_ln453_2_fu_1220_p2;
reg   [0:0] and_ln453_2_reg_1736;
wire   [0:0] or_ln462_fu_1285_p2;
reg   [0:0] or_ln462_reg_1741;
wire   [10:0] results_exp_V_fu_1315_p3;
reg   [10:0] results_exp_V_reg_1748;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln662_fu_350_p1;
wire   [63:0] data_V_fu_294_p1;
wire   [10:0] add_ln116_fu_326_p2;
wire   [10:0] addr_fu_332_p3;
wire   [3:0] p_Result_s_fu_340_p4;
wire   [255:0] zext_ln735_fu_359_p1;
wire   [255:0] r_2_fu_362_p2;
wire   [52:0] p_Result_22_fu_378_p3;
wire   [52:0] grp_fu_389_p1;
wire   [10:0] Ex_V_fu_419_p2;
wire   [0:0] tmp_10_fu_431_p3;
wire   [123:0] Mx_bits_V_1_fu_438_p2;
wire   [123:0] select_ln520_fu_443_p3;
wire   [123:0] Mx_bits_V_3_fu_456_p3;
wire   [60:0] p_Result_2_fu_462_p4;
wire   [61:0] p_Result_23_fu_472_p3;
reg   [61:0] p_Result_4_fu_480_p4;
wire   [63:0] p_Result_24_fu_490_p3;
reg   [63:0] tmp_fu_498_p3;
wire   [6:0] Mx_zeros_fu_506_p1;
wire   [123:0] zext_ln1253_fu_514_p1;
wire   [123:0] r_fu_518_p2;
wire   [10:0] select_ln482_fu_424_p3;
wire   [10:0] zext_ln646_fu_510_p1;
wire   [2:0] select_ln832_fu_450_p3;
wire   [3:0] p_Result_26_fu_570_p3;
wire   [0:0] tmp_s_fu_577_p18;
wire   [0:0] tmp_1_fu_615_p18;
wire   [0:0] results_sign_V_1_fu_653_p3;
wire   [0:0] xor_ln311_fu_676_p2;
wire   [0:0] and_ln311_fu_682_p2;
wire  signed [11:0] sext_ln1334_fu_695_p1;
wire   [11:0] sub_ln1311_fu_698_p2;
wire   [11:0] ush_fu_704_p3;
wire  signed [31:0] sh_prom_i_i_i_i_cast_cast_cast_fu_711_p1;
wire   [62:0] sh_prom_i_i_i_i_cast_cast_cast_cast_fu_715_p1;
wire   [62:0] r_V_fu_719_p2;
wire   [62:0] r_V_1_fu_724_p2;
wire   [62:0] r_V_14_fu_729_p3;
wire   [0:0] sin_basis_fu_760_p2;
wire   [6:0] p_Result_6_fu_736_p4;
wire   [7:0] p_Result_25_fu_765_p3;
wire   [48:0] r_V_3_fu_781_p0;
wire   [48:0] r_V_3_fu_781_p1;
wire   [97:0] r_V_3_fu_781_p2;
wire   [48:0] r_V_4_fu_800_p0;
wire   [97:0] zext_ln662_1_fu_797_p1;
wire   [48:0] r_V_4_fu_800_p1;
wire   [48:0] r_V_6_fu_805_p0;
wire   [48:0] r_V_6_fu_805_p1;
wire   [55:0] r_V_8_fu_817_p0;
wire   [107:0] r_V_8_fu_817_p2;
wire   [48:0] r_V_9_fu_840_p0;
wire   [92:0] r_V_9_fu_840_p2;
wire   [97:0] r_V_4_fu_800_p2;
wire   [97:0] r_V_6_fu_805_p2;
wire   [41:0] r_V_10_fu_891_p0;
wire   [32:0] r_V_10_fu_891_p1;
wire   [34:0] r_V_11_fu_904_p0;
wire   [24:0] r_V_11_fu_904_p1;
wire   [59:0] r_V_11_fu_904_p2;
wire   [62:0] t1_fu_876_p3;
wire  signed [63:0] sext_ln657_fu_920_p1;
wire  signed [63:0] sext_ln657_1_fu_924_p1;
wire   [63:0] ret_V_4_fu_927_p2;
wire  signed [63:0] sext_ln1146_fu_933_p1;
wire   [74:0] r_V_10_fu_891_p2;
wire   [63:0] zext_ln1146_fu_958_p1;
wire   [63:0] ret_V_6_fu_961_p2;
wire   [63:0] zext_ln1146_1_fu_966_p1;
wire   [62:0] r_V_13_fu_981_p1;
wire   [125:0] r_V_13_fu_981_p2;
wire   [10:0] Ex_V_4_fu_1037_p3;
wire   [31:0] p_Result_3_i_fu_1047_p3;
reg   [31:0] p_Result_20_i_fu_1075_p4;
wire   [31:0] p_Result_3_1_i_fu_1054_p3;
reg   [31:0] p_Result_20_1_i_fu_1093_p4;
wire   [31:0] p_Result_3_2_i_fu_1061_p3;
reg   [31:0] p_Result_20_2_i_fu_1111_p4;
wire   [31:0] p_Result_8_fu_1068_p3;
reg   [31:0] p_Result_20_3_i_fu_1129_p4;
reg   [31:0] tmp_i_fu_1085_p3;
wire   [62:0] sh_prom_i_i_0_i_fu_1147_p1;
reg   [31:0] tmp_1_i_fu_1103_p3;
wire   [62:0] sh_prom_i_i_1_i_fu_1168_p1;
wire   [31:0] add_ln451_fu_1162_p2;
wire   [31:0] add_ln451_1_fu_1184_p2;
wire   [0:0] icmp_ln453_1_fu_1178_p2;
wire   [0:0] xor_ln453_fu_1202_p2;
wire   [0:0] icmp_ln453_2_fu_1190_p2;
wire   [0:0] and_ln453_1_fu_1214_p2;
wire   [31:0] add_ln451_2_fu_1196_p2;
wire   [0:0] or_ln453_fu_1234_p2;
wire   [31:0] select_ln453_fu_1226_p3;
wire   [31:0] select_ln453_1_fu_1240_p3;
wire  signed [11:0] sext_ln169_fu_1043_p1;
wire   [11:0] add_ln461_fu_1256_p2;
wire  signed [31:0] sext_ln461_fu_1262_p1;
wire   [31:0] select_ln453_2_fu_1248_p3;
wire   [31:0] newexp_fu_1266_p2;
wire   [0:0] tmp_12_fu_1272_p3;
wire   [0:0] icmp_ln1452_fu_1280_p2;
wire   [0:0] or_ln311_fu_1302_p2;
wire   [10:0] select_ln311_1_fu_1295_p3;
wire   [10:0] trunc_ln255_fu_1291_p1;
wire   [10:0] select_ln311_fu_1307_p3;
wire   [62:0] sh_prom_i_i_2_i_fu_1322_p1;
wire   [62:0] shl_ln1253_2_fu_1325_p2;
wire   [62:0] sh_prom_i_i_3_i_fu_1330_p1;
wire   [62:0] shl_ln1253_3_fu_1333_p2;
wire   [51:0] tmp_4_fu_1347_p4;
wire   [51:0] tmp_5_fu_1364_p4;
wire   [51:0] tmp_6_fu_1373_p4;
wire   [0:0] or_ln462_1_fu_1339_p2;
wire   [51:0] select_ln462_fu_1357_p3;
wire   [51:0] select_ln462_1_fu_1383_p3;
wire   [0:0] or_ln462_2_fu_1343_p2;
wire   [51:0] select_ln462_2_fu_1390_p3;
wire   [51:0] tmp_7_fu_1398_p4;
wire   [0:0] and_ln300_1_fu_1415_p2;
wire   [0:0] xor_ln300_fu_1419_p2;
wire   [0:0] or_ln300_fu_1433_p2;
wire   [51:0] select_ln300_2_fu_1425_p3;
wire   [51:0] significand_fu_1407_p3;
wire   [51:0] results_sig_V_fu_1437_p3;
wire   [63:0] p_Result_27_fu_1445_p4;
reg    grp_fu_389_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to11;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [169:0] grp_fu_389_p10;
wire   [74:0] r_V_10_fu_891_p00;
wire   [74:0] r_V_10_fu_891_p10;
wire   [59:0] r_V_11_fu_904_p00;
wire   [59:0] r_V_11_fu_904_p10;
wire   [125:0] r_V_13_fu_981_p10;
wire   [107:0] r_V_8_fu_817_p00;
wire   [92:0] r_V_9_fu_840_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
end

nodalSolver_sin_or_cos_double_s_ref_4oPi_table_256_V #(
    .DataWidth( 256 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
ref_4oPi_table_256_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ref_4oPi_table_256_V_address0),
    .ce0(ref_4oPi_table_256_V_ce0),
    .q0(ref_4oPi_table_256_V_q0)
);

nodalSolver_sin_or_cos_double_s_fourth_order_double_sin_cos_K0_V #(
    .DataWidth( 59 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K0_V_address0),
    .ce0(fourth_order_double_sin_cos_K0_V_ce0),
    .q0(fourth_order_double_sin_cos_K0_V_q0)
);

nodalSolver_sin_or_cos_double_s_fourth_order_double_sin_cos_K1_V #(
    .DataWidth( 52 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K1_V_address0),
    .ce0(fourth_order_double_sin_cos_K1_V_ce0),
    .q0(fourth_order_double_sin_cos_K1_V_q0)
);

nodalSolver_sin_or_cos_double_s_fourth_order_double_sin_cos_K2_V #(
    .DataWidth( 44 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K2_V_address0),
    .ce0(fourth_order_double_sin_cos_K2_V_ce0),
    .q0(fourth_order_double_sin_cos_K2_V_q0)
);

nodalSolver_sin_or_cos_double_s_fourth_order_double_sin_cos_K3_V #(
    .DataWidth( 33 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K3_V_address0),
    .ce0(fourth_order_double_sin_cos_K3_V_ce0),
    .q0(fourth_order_double_sin_cos_K3_V_q0)
);

nodalSolver_sin_or_cos_double_s_fourth_order_double_sin_cos_K4_V #(
    .DataWidth( 25 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K4_V_address0),
    .ce0(fourth_order_double_sin_cos_K4_V_ce0),
    .q0(fourth_order_double_sin_cos_K4_V_q0)
);

nodalSolver_mul_170s_53ns_170_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 170 ),
    .din1_WIDTH( 53 ),
    .dout_WIDTH( 170 ))
mul_170s_53ns_170_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Med_V_reg_1493),
    .din1(grp_fu_389_p1),
    .ce(grp_fu_389_ce),
    .dout(grp_fu_389_p2)
);

nodalSolver_mux_83_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_83_1_1_1_U2(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(select_ln832_fu_450_p3),
    .dout(cos_basis_fu_548_p10)
);

nodalSolver_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
mux_164_1_1_1_U3(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd1),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_26_fu_570_p3),
    .dout(tmp_s_fu_577_p18)
);

nodalSolver_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
mux_164_1_1_1_U4(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd0),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd0),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_26_fu_570_p3),
    .dout(tmp_1_fu_615_p18)
);

nodalSolver_mul_49ns_49ns_98_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
mul_49ns_49ns_98_1_1_U5(
    .din0(r_V_3_fu_781_p0),
    .din1(r_V_3_fu_781_p1),
    .dout(r_V_3_fu_781_p2)
);

nodalSolver_mul_49ns_49ns_98_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
mul_49ns_49ns_98_1_1_U6(
    .din0(r_V_4_fu_800_p0),
    .din1(r_V_4_fu_800_p1),
    .dout(r_V_4_fu_800_p2)
);

nodalSolver_mul_49ns_49ns_98_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
mul_49ns_49ns_98_1_1_U7(
    .din0(r_V_6_fu_805_p0),
    .din1(r_V_6_fu_805_p1),
    .dout(r_V_6_fu_805_p2)
);

nodalSolver_mul_56ns_52s_108_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 56 ),
    .din1_WIDTH( 52 ),
    .dout_WIDTH( 108 ))
mul_56ns_52s_108_1_1_U8(
    .din0(r_V_8_fu_817_p0),
    .din1(fourth_order_double_sin_cos_K1_V_load_reg_1609),
    .dout(r_V_8_fu_817_p2)
);

nodalSolver_mul_49ns_44s_93_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 44 ),
    .dout_WIDTH( 93 ))
mul_49ns_44s_93_1_1_U9(
    .din0(r_V_9_fu_840_p0),
    .din1(fourth_order_double_sin_cos_K2_V_q0),
    .dout(r_V_9_fu_840_p2)
);

nodalSolver_mul_42ns_33ns_75_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 42 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 75 ))
mul_42ns_33ns_75_1_1_U10(
    .din0(r_V_10_fu_891_p0),
    .din1(r_V_10_fu_891_p1),
    .dout(r_V_10_fu_891_p2)
);

nodalSolver_mul_35ns_25ns_60_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 60 ))
mul_35ns_25ns_60_1_1_U11(
    .din0(r_V_11_fu_904_p0),
    .din1(r_V_11_fu_904_p1),
    .dout(r_V_11_fu_904_p2)
);

nodalSolver_mul_64s_63ns_126_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 63 ),
    .dout_WIDTH( 126 ))
mul_64s_63ns_126_1_1_U12(
    .din0(ret_V_reg_1674),
    .din1(r_V_13_fu_981_p1),
    .dout(r_V_13_fu_981_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        B_reg_1575 <= B_fu_746_p1;
        B_reg_1575_pp0_iter6_reg <= B_reg_1575;
        B_squared_reg_1603 <= {{r_V_3_fu_781_p2[97:49]}};
        B_trunc_reg_1580 <= {{r_V_14_fu_729_p3[55:7]}};
        Ex_V_3_reg_1533 <= Ex_V_3_fu_534_p2;
        Ex_V_3_reg_1533_pp0_iter10_reg <= Ex_V_3_reg_1533_pp0_iter9_reg;
        Ex_V_3_reg_1533_pp0_iter5_reg <= Ex_V_3_reg_1533;
        Ex_V_3_reg_1533_pp0_iter6_reg <= Ex_V_3_reg_1533_pp0_iter5_reg;
        Ex_V_3_reg_1533_pp0_iter7_reg <= Ex_V_3_reg_1533_pp0_iter6_reg;
        Ex_V_3_reg_1533_pp0_iter8_reg <= Ex_V_3_reg_1533_pp0_iter7_reg;
        Ex_V_3_reg_1533_pp0_iter9_reg <= Ex_V_3_reg_1533_pp0_iter8_reg;
        Mx_V_2_reg_1669 <= Mx_V_2_fu_952_p3;
        Mx_V_reg_1526 <= {{r_fu_518_p2[123:61]}};
        Mx_V_reg_1526_pp0_iter5_reg <= Mx_V_reg_1526;
        Mx_V_reg_1526_pp0_iter6_reg <= Mx_V_reg_1526_pp0_iter5_reg;
        Mx_V_reg_1526_pp0_iter7_reg <= Mx_V_reg_1526_pp0_iter6_reg;
        Mx_V_reg_1526_pp0_iter8_reg <= Mx_V_reg_1526_pp0_iter7_reg;
        Mx_bits_V_reg_1514 <= {{grp_fu_389_p2[166:43]}};
        and_ln300_reg_1557 <= and_ln300_fu_666_p2;
        and_ln300_reg_1557_pp0_iter10_reg <= and_ln300_reg_1557_pp0_iter9_reg;
        and_ln300_reg_1557_pp0_iter11_reg <= and_ln300_reg_1557_pp0_iter10_reg;
        and_ln300_reg_1557_pp0_iter5_reg <= and_ln300_reg_1557;
        and_ln300_reg_1557_pp0_iter6_reg <= and_ln300_reg_1557_pp0_iter5_reg;
        and_ln300_reg_1557_pp0_iter7_reg <= and_ln300_reg_1557_pp0_iter6_reg;
        and_ln300_reg_1557_pp0_iter8_reg <= and_ln300_reg_1557_pp0_iter7_reg;
        and_ln300_reg_1557_pp0_iter9_reg <= and_ln300_reg_1557_pp0_iter8_reg;
        and_ln453_2_reg_1736 <= and_ln453_2_fu_1220_p2;
        and_ln453_reg_1731 <= and_ln453_fu_1208_p2;
        closepath_reg_1476_pp0_iter2_reg <= closepath_reg_1476_pp0_iter1_reg;
        closepath_reg_1476_pp0_iter3_reg <= closepath_reg_1476_pp0_iter2_reg;
        cos_basis_reg_1545 <= cos_basis_fu_548_p10;
        cos_basis_reg_1545_pp0_iter10_reg <= cos_basis_reg_1545_pp0_iter9_reg;
        cos_basis_reg_1545_pp0_iter5_reg <= cos_basis_reg_1545;
        cos_basis_reg_1545_pp0_iter6_reg <= cos_basis_reg_1545_pp0_iter5_reg;
        cos_basis_reg_1545_pp0_iter7_reg <= cos_basis_reg_1545_pp0_iter6_reg;
        cos_basis_reg_1545_pp0_iter8_reg <= cos_basis_reg_1545_pp0_iter7_reg;
        cos_basis_reg_1545_pp0_iter9_reg <= cos_basis_reg_1545_pp0_iter8_reg;
        fourth_order_double_sin_cos_K1_V_load_reg_1609 <= fourth_order_double_sin_cos_K1_V_q0;
        icmp_ln453_reg_1720 <= icmp_ln453_fu_1156_p2;
        icmp_ln824_1_reg_1503 <= icmp_ln824_1_fu_394_p2;
        icmp_ln824_1_reg_1503_pp0_iter10_reg <= icmp_ln824_1_reg_1503_pp0_iter9_reg;
        icmp_ln824_1_reg_1503_pp0_iter11_reg <= icmp_ln824_1_reg_1503_pp0_iter10_reg;
        icmp_ln824_1_reg_1503_pp0_iter3_reg <= icmp_ln824_1_reg_1503;
        icmp_ln824_1_reg_1503_pp0_iter4_reg <= icmp_ln824_1_reg_1503_pp0_iter3_reg;
        icmp_ln824_1_reg_1503_pp0_iter5_reg <= icmp_ln824_1_reg_1503_pp0_iter4_reg;
        icmp_ln824_1_reg_1503_pp0_iter6_reg <= icmp_ln824_1_reg_1503_pp0_iter5_reg;
        icmp_ln824_1_reg_1503_pp0_iter7_reg <= icmp_ln824_1_reg_1503_pp0_iter6_reg;
        icmp_ln824_1_reg_1503_pp0_iter8_reg <= icmp_ln824_1_reg_1503_pp0_iter7_reg;
        icmp_ln824_1_reg_1503_pp0_iter9_reg <= icmp_ln824_1_reg_1503_pp0_iter8_reg;
        icmp_ln824_2_reg_1563 <= icmp_ln824_2_fu_671_p2;
        icmp_ln824_2_reg_1563_pp0_iter10_reg <= icmp_ln824_2_reg_1563_pp0_iter9_reg;
        icmp_ln824_2_reg_1563_pp0_iter11_reg <= icmp_ln824_2_reg_1563_pp0_iter10_reg;
        icmp_ln824_2_reg_1563_pp0_iter5_reg <= icmp_ln824_2_reg_1563;
        icmp_ln824_2_reg_1563_pp0_iter6_reg <= icmp_ln824_2_reg_1563_pp0_iter5_reg;
        icmp_ln824_2_reg_1563_pp0_iter7_reg <= icmp_ln824_2_reg_1563_pp0_iter6_reg;
        icmp_ln824_2_reg_1563_pp0_iter8_reg <= icmp_ln824_2_reg_1563_pp0_iter7_reg;
        icmp_ln824_2_reg_1563_pp0_iter9_reg <= icmp_ln824_2_reg_1563_pp0_iter8_reg;
        icmp_ln824_reg_1552 <= icmp_ln824_fu_661_p2;
        icmp_ln824_reg_1552_pp0_iter10_reg <= icmp_ln824_reg_1552_pp0_iter9_reg;
        icmp_ln824_reg_1552_pp0_iter11_reg <= icmp_ln824_reg_1552_pp0_iter10_reg;
        icmp_ln824_reg_1552_pp0_iter5_reg <= icmp_ln824_reg_1552;
        icmp_ln824_reg_1552_pp0_iter6_reg <= icmp_ln824_reg_1552_pp0_iter5_reg;
        icmp_ln824_reg_1552_pp0_iter7_reg <= icmp_ln824_reg_1552_pp0_iter6_reg;
        icmp_ln824_reg_1552_pp0_iter8_reg <= icmp_ln824_reg_1552_pp0_iter7_reg;
        icmp_ln824_reg_1552_pp0_iter9_reg <= icmp_ln824_reg_1552_pp0_iter8_reg;
        isNeg_reg_1539 <= Ex_V_3_fu_534_p2[32'd10];
        or_ln462_reg_1741 <= or_ln462_fu_1285_p2;
        p_Result_15_1_i_reg_1690 <= {{r_V_13_fu_981_p2[109:94]}};
        p_Result_15_2_i_reg_1695 <= {{r_V_13_fu_981_p2[93:78]}};
        p_Result_15_i_reg_1685 <= {{r_V_13_fu_981_p2[125:110]}};
        p_Result_21_reg_1457_pp0_iter2_reg <= p_Result_21_reg_1457_pp0_iter1_reg;
        p_Result_21_reg_1457_pp0_iter3_reg <= p_Result_21_reg_1457_pp0_iter2_reg;
        p_Result_i_reg_1700 <= {{r_V_13_fu_981_p2[77:63]}};
        result_V_reg_1679 <= {{r_V_13_fu_981_p2[125:63]}};
        results_exp_V_reg_1748 <= results_exp_V_fu_1315_p3;
        results_sign_V_reg_1570 <= results_sign_V_fu_688_p3;
        results_sign_V_reg_1570_pp0_iter10_reg <= results_sign_V_reg_1570_pp0_iter9_reg;
        results_sign_V_reg_1570_pp0_iter11_reg <= results_sign_V_reg_1570_pp0_iter10_reg;
        results_sign_V_reg_1570_pp0_iter5_reg <= results_sign_V_reg_1570;
        results_sign_V_reg_1570_pp0_iter6_reg <= results_sign_V_reg_1570_pp0_iter5_reg;
        results_sign_V_reg_1570_pp0_iter7_reg <= results_sign_V_reg_1570_pp0_iter6_reg;
        results_sign_V_reg_1570_pp0_iter8_reg <= results_sign_V_reg_1570_pp0_iter7_reg;
        results_sign_V_reg_1570_pp0_iter9_reg <= results_sign_V_reg_1570_pp0_iter8_reg;
        ret_V_5_reg_1659 <= ret_V_5_fu_936_p2;
        ret_V_reg_1674 <= ret_V_fu_969_p2;
        ret_reg_1509 <= grp_fu_389_p2;
        rhs_1_reg_1624 <= {{r_V_8_fu_817_p2[107:52]}};
        rhs_2_reg_1629 <= {{r_V_9_fu_840_p2[92:45]}};
        rhs_4_reg_1654 <= {{r_V_11_fu_904_p2[59:31]}};
        shl_ln1253_1_reg_1725 <= shl_ln1253_1_fu_1172_p2;
        shl_ln1253_reg_1715 <= shl_ln1253_fu_1151_p2;
        tmp_14_reg_1463_pp0_iter2_reg <= tmp_14_reg_1463_pp0_iter1_reg;
        tmp_14_reg_1463_pp0_iter3_reg <= tmp_14_reg_1463_pp0_iter2_reg;
        tmp_2_i_reg_1705 <= tmp_2_i_fu_1121_p3;
        tmp_3_i_reg_1710 <= tmp_3_i_fu_1139_p3;
        trunc_ln1069_1_reg_1644 <= {{r_V_6_fu_805_p2[97:63]}};
        trunc_ln1_reg_1634 <= {{r_V_4_fu_800_p2[97:56]}};
        trunc_ln2_reg_1664 <= {{r_V_10_fu_891_p2[74:38]}};
        zext_ln1070_reg_1598[48 : 0] <= zext_ln1070_fu_778_p1[48 : 0];
        zext_ln488_reg_1585[7 : 0] <= zext_ln488_fu_773_p1[7 : 0];
        zext_ln488_reg_1585_pp0_iter6_reg[7 : 0] <= zext_ln488_reg_1585[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Med_V_reg_1493 <= {{r_2_fu_362_p2[255:86]}};
        closepath_reg_1476 <= closepath_fu_320_p2;
        closepath_reg_1476_pp0_iter1_reg <= closepath_reg_1476;
        p_Result_21_reg_1457 <= data_V_fu_294_p1[32'd63];
        p_Result_21_reg_1457_pp0_iter1_reg <= p_Result_21_reg_1457;
        tmp_14_reg_1463 <= {{data_V_fu_294_p1[62:52]}};
        tmp_14_reg_1463_pp0_iter1_reg <= tmp_14_reg_1463;
        tmp_15_reg_1470 <= tmp_15_fu_316_p1;
        tmp_15_reg_1470_pp0_iter1_reg <= tmp_15_reg_1470;
        trunc_ln628_reg_1488 <= trunc_ln628_fu_355_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (closepath_reg_1476_pp0_iter2_reg == 1'd0))) begin
        k_V_reg_1521 <= {{grp_fu_389_p2[169:167]}};
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to11 = 1'b1;
    end else begin
        ap_idle_pp0_0to11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        fourth_order_double_sin_cos_K0_V_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        fourth_order_double_sin_cos_K1_V_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        fourth_order_double_sin_cos_K2_V_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        fourth_order_double_sin_cos_K3_V_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        fourth_order_double_sin_cos_K4_V_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_389_ce = 1'b1;
    end else begin
        grp_fu_389_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ref_4oPi_table_256_V_ce0 = 1'b1;
    end else begin
        ref_4oPi_table_256_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_fu_746_p1 = r_V_14_fu_729_p3[55:0];

assign Ex_V_3_fu_534_p2 = (select_ln482_fu_424_p3 - zext_ln646_fu_510_p1);

assign Ex_V_4_fu_1037_p3 = ((cos_basis_reg_1545_pp0_iter10_reg[0:0] == 1'b1) ? 11'd0 : Ex_V_3_reg_1533_pp0_iter10_reg);

assign Ex_V_fu_419_p2 = ($signed(tmp_14_reg_1463_pp0_iter3_reg) + $signed(11'd1027));

assign Mx_V_2_fu_952_p3 = ((cos_basis_reg_1545_pp0_iter8_reg[0:0] == 1'b1) ? 63'd9223372036854775807 : Mx_V_reg_1526_pp0_iter8_reg);

assign Mx_bits_V_1_fu_438_p2 = (124'd0 - Mx_bits_V_reg_1514);

assign Mx_bits_V_3_fu_456_p3 = ((closepath_reg_1476_pp0_iter3_reg[0:0] == 1'b1) ? Mx_bits_V_reg_1514 : select_ln520_fu_443_p3);

assign Mx_zeros_fu_506_p1 = tmp_fu_498_p3[6:0];

assign add_ln116_fu_326_p2 = ($signed(tmp_14_fu_306_p4) + $signed(11'd1101));

assign add_ln451_1_fu_1184_p2 = (tmp_2_i_fu_1121_p3 + add_ln451_fu_1162_p2);

assign add_ln451_2_fu_1196_p2 = (tmp_3_i_fu_1139_p3 + add_ln451_1_fu_1184_p2);

assign add_ln451_fu_1162_p2 = (tmp_1_i_fu_1103_p3 + 32'd16);

assign add_ln461_fu_1256_p2 = ($signed(sext_ln169_fu_1043_p1) + $signed(12'd1023));

assign addr_fu_332_p3 = ((closepath_fu_320_p2[0:0] == 1'b1) ? 11'd74 : add_ln116_fu_326_p2);

assign and_ln300_1_fu_1415_p2 = (icmp_ln824_reg_1552_pp0_iter11_reg & icmp_ln824_1_reg_1503_pp0_iter11_reg);

assign and_ln300_fu_666_p2 = (icmp_ln824_fu_661_p2 & icmp_ln824_1_reg_1503_pp0_iter3_reg);

assign and_ln311_fu_682_p2 = (xor_ln311_fu_676_p2 & results_sign_V_1_fu_653_p3);

assign and_ln453_1_fu_1214_p2 = (icmp_ln453_2_fu_1190_p2 & icmp_ln453_1_fu_1178_p2);

assign and_ln453_2_fu_1220_p2 = (icmp_ln453_fu_1156_p2 & and_ln453_1_fu_1214_p2);

assign and_ln453_fu_1208_p2 = (xor_ln453_fu_1202_p2 & icmp_ln453_fu_1156_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (1'b0 == ap_ce);
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = p_Result_27_fu_1445_p4;

assign closepath_fu_320_p2 = ((tmp_14_fu_306_p4 < 11'd1022) ? 1'b1 : 1'b0);

assign data_V_fu_294_p1 = t_in;

assign fourth_order_double_sin_cos_K0_V_address0 = zext_ln488_reg_1585_pp0_iter6_reg;

assign fourth_order_double_sin_cos_K1_V_address0 = zext_ln488_fu_773_p1;

assign fourth_order_double_sin_cos_K2_V_address0 = zext_ln488_reg_1585;

assign fourth_order_double_sin_cos_K3_V_address0 = zext_ln488_reg_1585_pp0_iter6_reg;

assign fourth_order_double_sin_cos_K4_V_address0 = zext_ln488_reg_1585_pp0_iter6_reg;

assign grp_fu_389_p1 = grp_fu_389_p10;

assign grp_fu_389_p10 = p_Result_22_fu_378_p3;

assign icmp_ln1452_fu_1280_p2 = ((result_V_reg_1679 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln453_1_fu_1178_p2 = ((tmp_1_i_fu_1103_p3 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln453_2_fu_1190_p2 = ((tmp_2_i_fu_1121_p3 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln453_fu_1156_p2 = ((tmp_i_fu_1085_p3 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln824_1_fu_394_p2 = ((tmp_15_reg_1470_pp0_iter1_reg == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln824_2_fu_671_p2 = ((tmp_14_reg_1463_pp0_iter3_reg == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln824_fu_661_p2 = ((tmp_14_reg_1463_pp0_iter3_reg == 11'd0) ? 1'b1 : 1'b0);

assign newexp_fu_1266_p2 = ($signed(sext_ln461_fu_1262_p1) - $signed(select_ln453_2_fu_1248_p3));

assign or_ln300_fu_1433_p2 = (icmp_ln824_2_reg_1563_pp0_iter11_reg | and_ln300_reg_1557_pp0_iter11_reg);

assign or_ln311_fu_1302_p2 = (or_ln462_fu_1285_p2 | icmp_ln824_2_reg_1563_pp0_iter10_reg);

assign or_ln453_fu_1234_p2 = (and_ln453_fu_1208_p2 | and_ln453_2_fu_1220_p2);

assign or_ln462_1_fu_1339_p2 = (or_ln462_reg_1741 | and_ln453_2_reg_1736);

assign or_ln462_2_fu_1343_p2 = (or_ln462_reg_1741 | icmp_ln453_reg_1720);

assign or_ln462_fu_1285_p2 = (tmp_12_fu_1272_p3 | icmp_ln1452_fu_1280_p2);

integer ap_tvar_int_0;

always @ (p_Result_3_1_i_fu_1054_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_20_1_i_fu_1093_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_20_1_i_fu_1093_p4[ap_tvar_int_0] = p_Result_3_1_i_fu_1054_p3[31 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (p_Result_3_2_i_fu_1061_p3) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_20_2_i_fu_1111_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_20_2_i_fu_1111_p4[ap_tvar_int_1] = p_Result_3_2_i_fu_1061_p3[31 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (p_Result_8_fu_1068_p3) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            p_Result_20_3_i_fu_1129_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_20_3_i_fu_1129_p4[ap_tvar_int_2] = p_Result_8_fu_1068_p3[31 - ap_tvar_int_2];
        end
    end
end

integer ap_tvar_int_3;

always @ (p_Result_3_i_fu_1047_p3) begin
    for (ap_tvar_int_3 = 32 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 31 - 0) begin
            p_Result_20_i_fu_1075_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            p_Result_20_i_fu_1075_p4[ap_tvar_int_3] = p_Result_3_i_fu_1047_p3[31 - ap_tvar_int_3];
        end
    end
end

assign p_Result_22_fu_378_p3 = {{1'd1}, {tmp_15_reg_1470_pp0_iter1_reg}};

assign p_Result_23_fu_472_p3 = {{p_Result_2_fu_462_p4}, {1'd1}};

assign p_Result_24_fu_490_p3 = {{2'd3}, {p_Result_4_fu_480_p4}};

assign p_Result_25_fu_765_p3 = {{sin_basis_fu_760_p2}, {p_Result_6_fu_736_p4}};

assign p_Result_26_fu_570_p3 = {{p_Result_21_reg_1457_pp0_iter3_reg}, {select_ln832_fu_450_p3}};

assign p_Result_27_fu_1445_p4 = {{{results_sign_V_reg_1570_pp0_iter11_reg}, {results_exp_V_reg_1748}}, {results_sig_V_fu_1437_p3}};

assign p_Result_2_fu_462_p4 = {{Mx_bits_V_3_fu_456_p3[123:63]}};

assign p_Result_3_1_i_fu_1054_p3 = {{p_Result_15_1_i_reg_1690}, {16'd32768}};

assign p_Result_3_2_i_fu_1061_p3 = {{p_Result_15_2_i_reg_1695}, {16'd32768}};

assign p_Result_3_i_fu_1047_p3 = {{p_Result_15_i_reg_1685}, {16'd32768}};

integer ap_tvar_int_4;

always @ (p_Result_23_fu_472_p3) begin
    for (ap_tvar_int_4 = 62 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 61 - 0) begin
            p_Result_4_fu_480_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            p_Result_4_fu_480_p4[ap_tvar_int_4] = p_Result_23_fu_472_p3[61 - ap_tvar_int_4];
        end
    end
end

assign p_Result_6_fu_736_p4 = {{r_V_14_fu_729_p3[62:56]}};

assign p_Result_8_fu_1068_p3 = {{p_Result_i_reg_1700}, {17'd65536}};

assign p_Result_s_fu_340_p4 = {{addr_fu_332_p3[10:7]}};

assign r_2_fu_362_p2 = ref_4oPi_table_256_V_q0 << zext_ln735_fu_359_p1;

assign r_V_10_fu_891_p0 = r_V_10_fu_891_p00;

assign r_V_10_fu_891_p00 = trunc_ln1_reg_1634;

assign r_V_10_fu_891_p1 = r_V_10_fu_891_p10;

assign r_V_10_fu_891_p10 = fourth_order_double_sin_cos_K3_V_q0;

assign r_V_11_fu_904_p0 = r_V_11_fu_904_p00;

assign r_V_11_fu_904_p00 = trunc_ln1069_1_reg_1644;

assign r_V_11_fu_904_p1 = r_V_11_fu_904_p10;

assign r_V_11_fu_904_p10 = fourth_order_double_sin_cos_K4_V_q0;

assign r_V_13_fu_981_p1 = r_V_13_fu_981_p10;

assign r_V_13_fu_981_p10 = Mx_V_2_reg_1669;

assign r_V_14_fu_729_p3 = ((isNeg_reg_1539[0:0] == 1'b1) ? r_V_fu_719_p2 : r_V_1_fu_724_p2);

assign r_V_1_fu_724_p2 = Mx_V_reg_1526 << sh_prom_i_i_i_i_cast_cast_cast_cast_fu_715_p1;

assign r_V_3_fu_781_p0 = zext_ln1070_fu_778_p1;

assign r_V_3_fu_781_p1 = zext_ln1070_fu_778_p1;

assign r_V_4_fu_800_p0 = zext_ln662_1_fu_797_p1;

assign r_V_4_fu_800_p1 = zext_ln1070_reg_1598;

assign r_V_6_fu_805_p0 = zext_ln662_1_fu_797_p1;

assign r_V_6_fu_805_p1 = zext_ln662_1_fu_797_p1;

assign r_V_8_fu_817_p0 = r_V_8_fu_817_p00;

assign r_V_8_fu_817_p00 = B_reg_1575_pp0_iter6_reg;

assign r_V_9_fu_840_p0 = r_V_9_fu_840_p00;

assign r_V_9_fu_840_p00 = B_squared_reg_1603;

assign r_V_fu_719_p2 = Mx_V_reg_1526 >> sh_prom_i_i_i_i_cast_cast_cast_cast_fu_715_p1;

assign r_fu_518_p2 = Mx_bits_V_3_fu_456_p3 << zext_ln1253_fu_514_p1;

assign ref_4oPi_table_256_V_address0 = zext_ln662_fu_350_p1;

assign results_exp_V_fu_1315_p3 = ((and_ln300_reg_1557_pp0_iter10_reg[0:0] == 1'b1) ? 11'd0 : select_ln311_fu_1307_p3);

assign results_sig_V_fu_1437_p3 = ((or_ln300_fu_1433_p2[0:0] == 1'b1) ? select_ln300_2_fu_1425_p3 : significand_fu_1407_p3);

assign results_sign_V_1_fu_653_p3 = ((cos_basis_fu_548_p10[0:0] == 1'b1) ? tmp_s_fu_577_p18 : tmp_1_fu_615_p18);

assign results_sign_V_fu_688_p3 = ((and_ln300_fu_666_p2[0:0] == 1'b1) ? p_Result_21_reg_1457_pp0_iter3_reg : and_ln311_fu_682_p2);

assign ret_V_4_fu_927_p2 = ($signed(sext_ln657_fu_920_p1) + $signed(sext_ln657_1_fu_924_p1));

assign ret_V_5_fu_936_p2 = ($signed(ret_V_4_fu_927_p2) + $signed(sext_ln1146_fu_933_p1));

assign ret_V_6_fu_961_p2 = (ret_V_5_reg_1659 + zext_ln1146_fu_958_p1);

assign ret_V_fu_969_p2 = (ret_V_6_fu_961_p2 + zext_ln1146_1_fu_966_p1);

assign select_ln300_2_fu_1425_p3 = ((xor_ln300_fu_1419_p2[0:0] == 1'b1) ? 52'd4503599627370495 : 52'd0);

assign select_ln311_1_fu_1295_p3 = ((icmp_ln824_2_reg_1563_pp0_iter10_reg[0:0] == 1'b1) ? 11'd2047 : 11'd0);

assign select_ln311_fu_1307_p3 = ((or_ln311_fu_1302_p2[0:0] == 1'b1) ? select_ln311_1_fu_1295_p3 : trunc_ln255_fu_1291_p1);

assign select_ln453_1_fu_1240_p3 = ((icmp_ln453_fu_1156_p2[0:0] == 1'b1) ? add_ln451_1_fu_1184_p2 : tmp_i_fu_1085_p3);

assign select_ln453_2_fu_1248_p3 = ((or_ln453_fu_1234_p2[0:0] == 1'b1) ? select_ln453_fu_1226_p3 : select_ln453_1_fu_1240_p3);

assign select_ln453_fu_1226_p3 = ((and_ln453_2_fu_1220_p2[0:0] == 1'b1) ? add_ln451_2_fu_1196_p2 : add_ln451_fu_1162_p2);

assign select_ln462_1_fu_1383_p3 = ((and_ln453_reg_1731[0:0] == 1'b1) ? tmp_5_fu_1364_p4 : tmp_6_fu_1373_p4);

assign select_ln462_2_fu_1390_p3 = ((or_ln462_1_fu_1339_p2[0:0] == 1'b1) ? select_ln462_fu_1357_p3 : select_ln462_1_fu_1383_p3);

assign select_ln462_fu_1357_p3 = ((or_ln462_reg_1741[0:0] == 1'b1) ? 52'd0 : tmp_4_fu_1347_p4);

assign select_ln482_fu_424_p3 = ((closepath_reg_1476_pp0_iter3_reg[0:0] == 1'b1) ? Ex_V_fu_419_p2 : 11'd0);

assign select_ln520_fu_443_p3 = ((tmp_10_fu_431_p3[0:0] == 1'b1) ? Mx_bits_V_1_fu_438_p2 : Mx_bits_V_reg_1514);

assign select_ln832_fu_450_p3 = ((closepath_reg_1476_pp0_iter3_reg[0:0] == 1'b1) ? 3'd0 : k_V_reg_1521);

assign sext_ln1146_fu_933_p1 = $signed(rhs_2_reg_1629);

assign sext_ln1334_fu_695_p1 = Ex_V_3_reg_1533;

assign sext_ln169_fu_1043_p1 = $signed(Ex_V_4_fu_1037_p3);

assign sext_ln461_fu_1262_p1 = $signed(add_ln461_fu_1256_p2);

assign sext_ln657_1_fu_924_p1 = $signed(rhs_1_reg_1624);

assign sext_ln657_fu_920_p1 = $signed(t1_fu_876_p3);

assign sh_prom_i_i_0_i_fu_1147_p1 = tmp_i_fu_1085_p3;

assign sh_prom_i_i_1_i_fu_1168_p1 = tmp_1_i_fu_1103_p3;

assign sh_prom_i_i_2_i_fu_1322_p1 = tmp_2_i_reg_1705;

assign sh_prom_i_i_3_i_fu_1330_p1 = tmp_3_i_reg_1710;

assign sh_prom_i_i_i_i_cast_cast_cast_cast_fu_715_p1 = $unsigned(sh_prom_i_i_i_i_cast_cast_cast_fu_711_p1);

assign sh_prom_i_i_i_i_cast_cast_cast_fu_711_p1 = $signed(ush_fu_704_p3);

assign shl_ln1253_1_fu_1172_p2 = shl_ln1253_fu_1151_p2 << sh_prom_i_i_1_i_fu_1168_p1;

assign shl_ln1253_2_fu_1325_p2 = shl_ln1253_1_reg_1725 << sh_prom_i_i_2_i_fu_1322_p1;

assign shl_ln1253_3_fu_1333_p2 = shl_ln1253_2_fu_1325_p2 << sh_prom_i_i_3_i_fu_1330_p1;

assign shl_ln1253_fu_1151_p2 = result_V_reg_1679 << sh_prom_i_i_0_i_fu_1147_p1;

assign significand_fu_1407_p3 = ((or_ln462_2_fu_1343_p2[0:0] == 1'b1) ? select_ln462_2_fu_1390_p3 : tmp_7_fu_1398_p4);

assign sin_basis_fu_760_p2 = (cos_basis_reg_1545 ^ 1'd1);

assign sub_ln1311_fu_698_p2 = ($signed(12'd0) - $signed(sext_ln1334_fu_695_p1));

assign t1_fu_876_p3 = {{fourth_order_double_sin_cos_K0_V_q0}, {4'd0}};

assign tmp_10_fu_431_p3 = ret_reg_1509[32'd167];

assign tmp_12_fu_1272_p3 = newexp_fu_1266_p2[32'd31];

assign tmp_14_fu_306_p4 = {{data_V_fu_294_p1[62:52]}};

assign tmp_15_fu_316_p1 = data_V_fu_294_p1[51:0];


always @ (p_Result_20_1_i_fu_1093_p4) begin
    if (p_Result_20_1_i_fu_1093_p4[0] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd0;
    end else if (p_Result_20_1_i_fu_1093_p4[1] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd1;
    end else if (p_Result_20_1_i_fu_1093_p4[2] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd2;
    end else if (p_Result_20_1_i_fu_1093_p4[3] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd3;
    end else if (p_Result_20_1_i_fu_1093_p4[4] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd4;
    end else if (p_Result_20_1_i_fu_1093_p4[5] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd5;
    end else if (p_Result_20_1_i_fu_1093_p4[6] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd6;
    end else if (p_Result_20_1_i_fu_1093_p4[7] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd7;
    end else if (p_Result_20_1_i_fu_1093_p4[8] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd8;
    end else if (p_Result_20_1_i_fu_1093_p4[9] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd9;
    end else if (p_Result_20_1_i_fu_1093_p4[10] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd10;
    end else if (p_Result_20_1_i_fu_1093_p4[11] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd11;
    end else if (p_Result_20_1_i_fu_1093_p4[12] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd12;
    end else if (p_Result_20_1_i_fu_1093_p4[13] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd13;
    end else if (p_Result_20_1_i_fu_1093_p4[14] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd14;
    end else if (p_Result_20_1_i_fu_1093_p4[15] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd15;
    end else if (p_Result_20_1_i_fu_1093_p4[16] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd16;
    end else if (p_Result_20_1_i_fu_1093_p4[17] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd17;
    end else if (p_Result_20_1_i_fu_1093_p4[18] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd18;
    end else if (p_Result_20_1_i_fu_1093_p4[19] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd19;
    end else if (p_Result_20_1_i_fu_1093_p4[20] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd20;
    end else if (p_Result_20_1_i_fu_1093_p4[21] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd21;
    end else if (p_Result_20_1_i_fu_1093_p4[22] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd22;
    end else if (p_Result_20_1_i_fu_1093_p4[23] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd23;
    end else if (p_Result_20_1_i_fu_1093_p4[24] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd24;
    end else if (p_Result_20_1_i_fu_1093_p4[25] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd25;
    end else if (p_Result_20_1_i_fu_1093_p4[26] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd26;
    end else if (p_Result_20_1_i_fu_1093_p4[27] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd27;
    end else if (p_Result_20_1_i_fu_1093_p4[28] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd28;
    end else if (p_Result_20_1_i_fu_1093_p4[29] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd29;
    end else if (p_Result_20_1_i_fu_1093_p4[30] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd30;
    end else if (p_Result_20_1_i_fu_1093_p4[31] == 1'b1) begin
        tmp_1_i_fu_1103_p3 = 32'd31;
    end else begin
        tmp_1_i_fu_1103_p3 = 32'd32;
    end
end


always @ (p_Result_20_2_i_fu_1111_p4) begin
    if (p_Result_20_2_i_fu_1111_p4[0] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd0;
    end else if (p_Result_20_2_i_fu_1111_p4[1] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd1;
    end else if (p_Result_20_2_i_fu_1111_p4[2] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd2;
    end else if (p_Result_20_2_i_fu_1111_p4[3] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd3;
    end else if (p_Result_20_2_i_fu_1111_p4[4] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd4;
    end else if (p_Result_20_2_i_fu_1111_p4[5] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd5;
    end else if (p_Result_20_2_i_fu_1111_p4[6] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd6;
    end else if (p_Result_20_2_i_fu_1111_p4[7] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd7;
    end else if (p_Result_20_2_i_fu_1111_p4[8] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd8;
    end else if (p_Result_20_2_i_fu_1111_p4[9] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd9;
    end else if (p_Result_20_2_i_fu_1111_p4[10] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd10;
    end else if (p_Result_20_2_i_fu_1111_p4[11] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd11;
    end else if (p_Result_20_2_i_fu_1111_p4[12] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd12;
    end else if (p_Result_20_2_i_fu_1111_p4[13] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd13;
    end else if (p_Result_20_2_i_fu_1111_p4[14] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd14;
    end else if (p_Result_20_2_i_fu_1111_p4[15] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd15;
    end else if (p_Result_20_2_i_fu_1111_p4[16] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd16;
    end else if (p_Result_20_2_i_fu_1111_p4[17] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd17;
    end else if (p_Result_20_2_i_fu_1111_p4[18] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd18;
    end else if (p_Result_20_2_i_fu_1111_p4[19] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd19;
    end else if (p_Result_20_2_i_fu_1111_p4[20] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd20;
    end else if (p_Result_20_2_i_fu_1111_p4[21] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd21;
    end else if (p_Result_20_2_i_fu_1111_p4[22] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd22;
    end else if (p_Result_20_2_i_fu_1111_p4[23] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd23;
    end else if (p_Result_20_2_i_fu_1111_p4[24] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd24;
    end else if (p_Result_20_2_i_fu_1111_p4[25] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd25;
    end else if (p_Result_20_2_i_fu_1111_p4[26] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd26;
    end else if (p_Result_20_2_i_fu_1111_p4[27] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd27;
    end else if (p_Result_20_2_i_fu_1111_p4[28] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd28;
    end else if (p_Result_20_2_i_fu_1111_p4[29] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd29;
    end else if (p_Result_20_2_i_fu_1111_p4[30] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd30;
    end else if (p_Result_20_2_i_fu_1111_p4[31] == 1'b1) begin
        tmp_2_i_fu_1121_p3 = 32'd31;
    end else begin
        tmp_2_i_fu_1121_p3 = 32'd32;
    end
end


always @ (p_Result_20_3_i_fu_1129_p4) begin
    if (p_Result_20_3_i_fu_1129_p4[0] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd0;
    end else if (p_Result_20_3_i_fu_1129_p4[1] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd1;
    end else if (p_Result_20_3_i_fu_1129_p4[2] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd2;
    end else if (p_Result_20_3_i_fu_1129_p4[3] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd3;
    end else if (p_Result_20_3_i_fu_1129_p4[4] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd4;
    end else if (p_Result_20_3_i_fu_1129_p4[5] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd5;
    end else if (p_Result_20_3_i_fu_1129_p4[6] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd6;
    end else if (p_Result_20_3_i_fu_1129_p4[7] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd7;
    end else if (p_Result_20_3_i_fu_1129_p4[8] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd8;
    end else if (p_Result_20_3_i_fu_1129_p4[9] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd9;
    end else if (p_Result_20_3_i_fu_1129_p4[10] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd10;
    end else if (p_Result_20_3_i_fu_1129_p4[11] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd11;
    end else if (p_Result_20_3_i_fu_1129_p4[12] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd12;
    end else if (p_Result_20_3_i_fu_1129_p4[13] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd13;
    end else if (p_Result_20_3_i_fu_1129_p4[14] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd14;
    end else if (p_Result_20_3_i_fu_1129_p4[15] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd15;
    end else if (p_Result_20_3_i_fu_1129_p4[16] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd16;
    end else if (p_Result_20_3_i_fu_1129_p4[17] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd17;
    end else if (p_Result_20_3_i_fu_1129_p4[18] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd18;
    end else if (p_Result_20_3_i_fu_1129_p4[19] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd19;
    end else if (p_Result_20_3_i_fu_1129_p4[20] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd20;
    end else if (p_Result_20_3_i_fu_1129_p4[21] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd21;
    end else if (p_Result_20_3_i_fu_1129_p4[22] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd22;
    end else if (p_Result_20_3_i_fu_1129_p4[23] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd23;
    end else if (p_Result_20_3_i_fu_1129_p4[24] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd24;
    end else if (p_Result_20_3_i_fu_1129_p4[25] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd25;
    end else if (p_Result_20_3_i_fu_1129_p4[26] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd26;
    end else if (p_Result_20_3_i_fu_1129_p4[27] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd27;
    end else if (p_Result_20_3_i_fu_1129_p4[28] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd28;
    end else if (p_Result_20_3_i_fu_1129_p4[29] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd29;
    end else if (p_Result_20_3_i_fu_1129_p4[30] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd30;
    end else if (p_Result_20_3_i_fu_1129_p4[31] == 1'b1) begin
        tmp_3_i_fu_1139_p3 = 32'd31;
    end else begin
        tmp_3_i_fu_1139_p3 = 32'd32;
    end
end

assign tmp_4_fu_1347_p4 = {{shl_ln1253_3_fu_1333_p2[61:10]}};

assign tmp_5_fu_1364_p4 = {{shl_ln1253_1_reg_1725[61:10]}};

assign tmp_6_fu_1373_p4 = {{shl_ln1253_2_fu_1325_p2[61:10]}};

assign tmp_7_fu_1398_p4 = {{shl_ln1253_reg_1715[61:10]}};


always @ (p_Result_24_fu_490_p3) begin
    if (p_Result_24_fu_490_p3[0] == 1'b1) begin
        tmp_fu_498_p3 = 64'd0;
    end else if (p_Result_24_fu_490_p3[1] == 1'b1) begin
        tmp_fu_498_p3 = 64'd1;
    end else if (p_Result_24_fu_490_p3[2] == 1'b1) begin
        tmp_fu_498_p3 = 64'd2;
    end else if (p_Result_24_fu_490_p3[3] == 1'b1) begin
        tmp_fu_498_p3 = 64'd3;
    end else if (p_Result_24_fu_490_p3[4] == 1'b1) begin
        tmp_fu_498_p3 = 64'd4;
    end else if (p_Result_24_fu_490_p3[5] == 1'b1) begin
        tmp_fu_498_p3 = 64'd5;
    end else if (p_Result_24_fu_490_p3[6] == 1'b1) begin
        tmp_fu_498_p3 = 64'd6;
    end else if (p_Result_24_fu_490_p3[7] == 1'b1) begin
        tmp_fu_498_p3 = 64'd7;
    end else if (p_Result_24_fu_490_p3[8] == 1'b1) begin
        tmp_fu_498_p3 = 64'd8;
    end else if (p_Result_24_fu_490_p3[9] == 1'b1) begin
        tmp_fu_498_p3 = 64'd9;
    end else if (p_Result_24_fu_490_p3[10] == 1'b1) begin
        tmp_fu_498_p3 = 64'd10;
    end else if (p_Result_24_fu_490_p3[11] == 1'b1) begin
        tmp_fu_498_p3 = 64'd11;
    end else if (p_Result_24_fu_490_p3[12] == 1'b1) begin
        tmp_fu_498_p3 = 64'd12;
    end else if (p_Result_24_fu_490_p3[13] == 1'b1) begin
        tmp_fu_498_p3 = 64'd13;
    end else if (p_Result_24_fu_490_p3[14] == 1'b1) begin
        tmp_fu_498_p3 = 64'd14;
    end else if (p_Result_24_fu_490_p3[15] == 1'b1) begin
        tmp_fu_498_p3 = 64'd15;
    end else if (p_Result_24_fu_490_p3[16] == 1'b1) begin
        tmp_fu_498_p3 = 64'd16;
    end else if (p_Result_24_fu_490_p3[17] == 1'b1) begin
        tmp_fu_498_p3 = 64'd17;
    end else if (p_Result_24_fu_490_p3[18] == 1'b1) begin
        tmp_fu_498_p3 = 64'd18;
    end else if (p_Result_24_fu_490_p3[19] == 1'b1) begin
        tmp_fu_498_p3 = 64'd19;
    end else if (p_Result_24_fu_490_p3[20] == 1'b1) begin
        tmp_fu_498_p3 = 64'd20;
    end else if (p_Result_24_fu_490_p3[21] == 1'b1) begin
        tmp_fu_498_p3 = 64'd21;
    end else if (p_Result_24_fu_490_p3[22] == 1'b1) begin
        tmp_fu_498_p3 = 64'd22;
    end else if (p_Result_24_fu_490_p3[23] == 1'b1) begin
        tmp_fu_498_p3 = 64'd23;
    end else if (p_Result_24_fu_490_p3[24] == 1'b1) begin
        tmp_fu_498_p3 = 64'd24;
    end else if (p_Result_24_fu_490_p3[25] == 1'b1) begin
        tmp_fu_498_p3 = 64'd25;
    end else if (p_Result_24_fu_490_p3[26] == 1'b1) begin
        tmp_fu_498_p3 = 64'd26;
    end else if (p_Result_24_fu_490_p3[27] == 1'b1) begin
        tmp_fu_498_p3 = 64'd27;
    end else if (p_Result_24_fu_490_p3[28] == 1'b1) begin
        tmp_fu_498_p3 = 64'd28;
    end else if (p_Result_24_fu_490_p3[29] == 1'b1) begin
        tmp_fu_498_p3 = 64'd29;
    end else if (p_Result_24_fu_490_p3[30] == 1'b1) begin
        tmp_fu_498_p3 = 64'd30;
    end else if (p_Result_24_fu_490_p3[31] == 1'b1) begin
        tmp_fu_498_p3 = 64'd31;
    end else if (p_Result_24_fu_490_p3[32] == 1'b1) begin
        tmp_fu_498_p3 = 64'd32;
    end else if (p_Result_24_fu_490_p3[33] == 1'b1) begin
        tmp_fu_498_p3 = 64'd33;
    end else if (p_Result_24_fu_490_p3[34] == 1'b1) begin
        tmp_fu_498_p3 = 64'd34;
    end else if (p_Result_24_fu_490_p3[35] == 1'b1) begin
        tmp_fu_498_p3 = 64'd35;
    end else if (p_Result_24_fu_490_p3[36] == 1'b1) begin
        tmp_fu_498_p3 = 64'd36;
    end else if (p_Result_24_fu_490_p3[37] == 1'b1) begin
        tmp_fu_498_p3 = 64'd37;
    end else if (p_Result_24_fu_490_p3[38] == 1'b1) begin
        tmp_fu_498_p3 = 64'd38;
    end else if (p_Result_24_fu_490_p3[39] == 1'b1) begin
        tmp_fu_498_p3 = 64'd39;
    end else if (p_Result_24_fu_490_p3[40] == 1'b1) begin
        tmp_fu_498_p3 = 64'd40;
    end else if (p_Result_24_fu_490_p3[41] == 1'b1) begin
        tmp_fu_498_p3 = 64'd41;
    end else if (p_Result_24_fu_490_p3[42] == 1'b1) begin
        tmp_fu_498_p3 = 64'd42;
    end else if (p_Result_24_fu_490_p3[43] == 1'b1) begin
        tmp_fu_498_p3 = 64'd43;
    end else if (p_Result_24_fu_490_p3[44] == 1'b1) begin
        tmp_fu_498_p3 = 64'd44;
    end else if (p_Result_24_fu_490_p3[45] == 1'b1) begin
        tmp_fu_498_p3 = 64'd45;
    end else if (p_Result_24_fu_490_p3[46] == 1'b1) begin
        tmp_fu_498_p3 = 64'd46;
    end else if (p_Result_24_fu_490_p3[47] == 1'b1) begin
        tmp_fu_498_p3 = 64'd47;
    end else if (p_Result_24_fu_490_p3[48] == 1'b1) begin
        tmp_fu_498_p3 = 64'd48;
    end else if (p_Result_24_fu_490_p3[49] == 1'b1) begin
        tmp_fu_498_p3 = 64'd49;
    end else if (p_Result_24_fu_490_p3[50] == 1'b1) begin
        tmp_fu_498_p3 = 64'd50;
    end else if (p_Result_24_fu_490_p3[51] == 1'b1) begin
        tmp_fu_498_p3 = 64'd51;
    end else if (p_Result_24_fu_490_p3[52] == 1'b1) begin
        tmp_fu_498_p3 = 64'd52;
    end else if (p_Result_24_fu_490_p3[53] == 1'b1) begin
        tmp_fu_498_p3 = 64'd53;
    end else if (p_Result_24_fu_490_p3[54] == 1'b1) begin
        tmp_fu_498_p3 = 64'd54;
    end else if (p_Result_24_fu_490_p3[55] == 1'b1) begin
        tmp_fu_498_p3 = 64'd55;
    end else if (p_Result_24_fu_490_p3[56] == 1'b1) begin
        tmp_fu_498_p3 = 64'd56;
    end else if (p_Result_24_fu_490_p3[57] == 1'b1) begin
        tmp_fu_498_p3 = 64'd57;
    end else if (p_Result_24_fu_490_p3[58] == 1'b1) begin
        tmp_fu_498_p3 = 64'd58;
    end else if (p_Result_24_fu_490_p3[59] == 1'b1) begin
        tmp_fu_498_p3 = 64'd59;
    end else if (p_Result_24_fu_490_p3[60] == 1'b1) begin
        tmp_fu_498_p3 = 64'd60;
    end else if (p_Result_24_fu_490_p3[61] == 1'b1) begin
        tmp_fu_498_p3 = 64'd61;
    end else if (p_Result_24_fu_490_p3[62] == 1'b1) begin
        tmp_fu_498_p3 = 64'd62;
    end else if (p_Result_24_fu_490_p3[63] == 1'b1) begin
        tmp_fu_498_p3 = 64'd63;
    end else begin
        tmp_fu_498_p3 = 64'd64;
    end
end


always @ (p_Result_20_i_fu_1075_p4) begin
    if (p_Result_20_i_fu_1075_p4[0] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd0;
    end else if (p_Result_20_i_fu_1075_p4[1] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd1;
    end else if (p_Result_20_i_fu_1075_p4[2] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd2;
    end else if (p_Result_20_i_fu_1075_p4[3] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd3;
    end else if (p_Result_20_i_fu_1075_p4[4] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd4;
    end else if (p_Result_20_i_fu_1075_p4[5] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd5;
    end else if (p_Result_20_i_fu_1075_p4[6] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd6;
    end else if (p_Result_20_i_fu_1075_p4[7] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd7;
    end else if (p_Result_20_i_fu_1075_p4[8] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd8;
    end else if (p_Result_20_i_fu_1075_p4[9] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd9;
    end else if (p_Result_20_i_fu_1075_p4[10] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd10;
    end else if (p_Result_20_i_fu_1075_p4[11] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd11;
    end else if (p_Result_20_i_fu_1075_p4[12] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd12;
    end else if (p_Result_20_i_fu_1075_p4[13] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd13;
    end else if (p_Result_20_i_fu_1075_p4[14] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd14;
    end else if (p_Result_20_i_fu_1075_p4[15] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd15;
    end else if (p_Result_20_i_fu_1075_p4[16] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd16;
    end else if (p_Result_20_i_fu_1075_p4[17] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd17;
    end else if (p_Result_20_i_fu_1075_p4[18] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd18;
    end else if (p_Result_20_i_fu_1075_p4[19] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd19;
    end else if (p_Result_20_i_fu_1075_p4[20] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd20;
    end else if (p_Result_20_i_fu_1075_p4[21] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd21;
    end else if (p_Result_20_i_fu_1075_p4[22] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd22;
    end else if (p_Result_20_i_fu_1075_p4[23] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd23;
    end else if (p_Result_20_i_fu_1075_p4[24] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd24;
    end else if (p_Result_20_i_fu_1075_p4[25] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd25;
    end else if (p_Result_20_i_fu_1075_p4[26] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd26;
    end else if (p_Result_20_i_fu_1075_p4[27] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd27;
    end else if (p_Result_20_i_fu_1075_p4[28] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd28;
    end else if (p_Result_20_i_fu_1075_p4[29] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd29;
    end else if (p_Result_20_i_fu_1075_p4[30] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd30;
    end else if (p_Result_20_i_fu_1075_p4[31] == 1'b1) begin
        tmp_i_fu_1085_p3 = 32'd31;
    end else begin
        tmp_i_fu_1085_p3 = 32'd32;
    end
end

assign trunc_ln255_fu_1291_p1 = newexp_fu_1266_p2[10:0];

assign trunc_ln628_fu_355_p1 = addr_fu_332_p3[6:0];

assign ush_fu_704_p3 = ((isNeg_reg_1539[0:0] == 1'b1) ? sub_ln1311_fu_698_p2 : sext_ln1334_fu_695_p1);

assign xor_ln300_fu_1419_p2 = (1'd1 ^ and_ln300_1_fu_1415_p2);

assign xor_ln311_fu_676_p2 = (icmp_ln824_2_fu_671_p2 ^ 1'd1);

assign xor_ln453_fu_1202_p2 = (icmp_ln453_1_fu_1178_p2 ^ 1'd1);

assign zext_ln1070_fu_778_p1 = B_trunc_reg_1580;

assign zext_ln1146_1_fu_966_p1 = rhs_4_reg_1654;

assign zext_ln1146_fu_958_p1 = trunc_ln2_reg_1664;

assign zext_ln1253_fu_514_p1 = Mx_zeros_fu_506_p1;

assign zext_ln488_fu_773_p1 = p_Result_25_fu_765_p3;

assign zext_ln646_fu_510_p1 = Mx_zeros_fu_506_p1;

assign zext_ln662_1_fu_797_p1 = B_squared_reg_1603;

assign zext_ln662_fu_350_p1 = p_Result_s_fu_340_p4;

assign zext_ln735_fu_359_p1 = trunc_ln628_reg_1488;

always @ (posedge ap_clk) begin
    zext_ln488_reg_1585[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln488_reg_1585_pp0_iter6_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln1070_reg_1598[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
end

endmodule //nodalSolver_sin_or_cos_double_s
